@page "/autors"
@using Volo.Abp.Application.Dtos
@using Acme.BookStoree.Autors
@using Acme.BookStoree.Localization
@using Microsoft.Extensions.Localization
@using Volo.Abp.AspNetCore.Components.Web;
@using System.ComponentModel.DataAnnotations;
@inject  IStringLocalizer<BookStoreeResource>  L
@inherits AbpCrudPageBase<IAutorAppService, AutorDto, Guid, PagedAndSortedResultRequestDto, CreateUpdateAutorDto>
@inject AbpBlazorMessageLocalizerHelper<BookStoreeResource> JH



<Card>
    <CardHeader>
        <Row Class="justify-content-between">
            <Column ColumnSize="ColumnSize.IsAuto">
                <h2>@L["Autors"]</h2>
            </Column>
            <Column ColumnSize="ColumnSize.IsAuto">
                <Button Color="Color.Primary"
                        Clicked="OpenCreateModalAsync">
                    @L["NewAutor"]
                </Button>
            </Column>
        </Row>
    </CardHeader>

    <CardBody>
        <DataGrid TItem="AutorDto"
                  Data="Entities"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  PageSize="PageSize">
            <DataGridColumns>
                <DataGridColumn TItem="AutorDto"
                                Field="@nameof(AutorDto.Nome)"
                                Caption="@L["Name"]"></DataGridColumn>
                <DataGridColumn TItem="AutorDto"
                                Field="@nameof(AutorDto.Email)"
                                Caption="@L["Email"]">
                </DataGridColumn>
                <DataGridEntityActionsColumn TItem="AutorDto" @ref="@EntityActionsColumn">
                    <DisplayTemplate>
                        <EntityActions TItem="AutorDto" EntityActionsColumn="@EntityActionsColumn">
                            <EntityAction TItem="AutorDto"
                                          Text="@L["Edit"]"
                                          Clicked="() => OpenEditModalAsync(context)" />
                        </EntityActions>
                    </DisplayTemplate>
                </DataGridEntityActionsColumn>

                
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>

<Modal @ref="@CreateModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@L["NewAutor"]</ModalTitle>
                <CloseButton Clicked="CloseCreateModalAsync"/>
            </ModalHeader>
            
            <ModalBody>
                <Validations @ref="@CreateValidationsRef" Model="@NewEntity" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@JH.Localize">
                        <Field>
                            <FieldLabel>@L["Nome"]</FieldLabel>
                            <TextEdit @bind-Text="@NewEntity.Nome">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Field>
                        <FieldLabel>@L["Email"]</FieldLabel>
                        <TextEdit @bind-Text="@NewEntity.Email">
                            <Feedback>
                                <ValidationError/>
                            </Feedback>
                        </TextEdit>
                        <ValidationMessage For="@(() => NewEntity.Email)" />
                    </Field>
                </Validations>
            </ModalBody>
            
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateModalAsync">@L["Cancel"]</Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="CreateEntityAsync">@L["Save"]</Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>